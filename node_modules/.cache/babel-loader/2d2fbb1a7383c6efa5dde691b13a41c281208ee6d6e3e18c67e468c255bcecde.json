{"ast":null,"code":"var _jsxFileName = \"/Users/techi.s./Desktop/Netflix-clone/net-clon/src/Components/RowPost/RowPost.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Youtube from 'react-youtube';\nimport './RowPost.css';\nimport { imageUrl } from '../../constants/constants';\nimport axios from '../../axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RowPost(props) {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [id, setId] = use;\n  useEffect(() => {\n    axios.get(props.url).then(response => {\n      console.log(response.data);\n      setMovies(response.data.results);\n    }).catch(err => {\n      alert('Network Error');\n    });\n  }, []);\n  const opts = {\n    height: '390',\n    width: '100%',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 0\n    }\n  };\n  const handleMovie = id => {\n    console.log(id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posters\",\n      children: movies.map(obj => /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => handleMovie(obj.id),\n        className: props.isSmall ? 'smallPoster' : 'poster',\n        alt: \"poster\",\n        src: `${imageUrl + obj.backdrop_path}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Youtube, {\n      opts: opts,\n      videoId: \"2g811Eo7K8U\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(RowPost, \"+jZiGaK1IrFkDFSplSYv9W7La4s=\");\n_c = RowPost;\nexport default RowPost;\nvar _c;\n$RefreshReg$(_c, \"RowPost\");","map":{"version":3,"names":["React","useEffect","useState","Youtube","imageUrl","axios","RowPost","props","movies","setMovies","id","setId","use","get","url","then","response","console","log","data","results","catch","err","alert","opts","height","width","playerVars","autoplay","handleMovie","title","map","obj","isSmall","backdrop_path"],"sources":["/Users/techi.s./Desktop/Netflix-clone/net-clon/src/Components/RowPost/RowPost.js"],"sourcesContent":["import React,{useEffect,useState} from 'react'\nimport Youtube from 'react-youtube'\nimport './RowPost.css'\nimport {imageUrl} from '../../constants/constants' \nimport axios from '../../axios'\nfunction RowPost(props) {\n  const [movies,setMovies] = useState([])\n  const[id,setId] = use\n  useEffect(()=> {\n    axios.get(props.url).then(response=>{\n      console.log(response.data)\n      setMovies(response.data.results)\n    }) .catch(err=>{\n      alert('Network Error')\n    })\n  },[])\n  const opts = {\n    height: '390',\n    width: '100%',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 0,\n    },\n  };\nconst handleMovie = (id)=>{\n  console.log(id)\n}\n  return (\n    <div className='row'> \n      <h2>{props.title}</h2> \n      <div className='posters'> \n      {movies.map((obj)=> \n\n        <img onClick={()=>handleMovie(obj.id)} className={props.isSmall ? 'smallPoster': 'poster'} alt='poster' src={`${imageUrl+ obj.backdrop_path}`} />\n      )}     \n      </div>\n      <Youtube opts={opts} videoId=\"2g811Eo7K8U\"/>\n    </div>\n  )\n}\n\nexport default RowPost\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,SAAS,EAACC,QAAQ,QAAO,OAAO;AAC9C,OAAOC,OAAO,MAAM,eAAe;AACnC,OAAO,eAAe;AACtB,SAAQC,QAAQ,QAAO,2BAA2B;AAClD,OAAOC,KAAK,MAAM,aAAa;AAAA;AAC/B,SAASC,OAAO,CAACC,KAAK,EAAE;EAAA;EACtB,MAAM,CAACC,MAAM,EAACC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACvC,MAAK,CAACQ,EAAE,EAACC,KAAK,CAAC,GAAGC,GAAG;EACrBX,SAAS,CAAC,MAAK;IACbI,KAAK,CAACQ,GAAG,CAACN,KAAK,CAACO,GAAG,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAE;MAClCC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAAC;MAC1BV,SAAS,CAACO,QAAQ,CAACG,IAAI,CAACC,OAAO,CAAC;IAClC,CAAC,CAAC,CAAEC,KAAK,CAACC,GAAG,IAAE;MACbC,KAAK,CAAC,eAAe,CAAC;IACxB,CAAC,CAAC;EACJ,CAAC,EAAC,EAAE,CAAC;EACL,MAAMC,IAAI,GAAG;IACXC,MAAM,EAAE,KAAK;IACbC,KAAK,EAAE,MAAM;IACbC,UAAU,EAAE;MACV;MACAC,QAAQ,EAAE;IACZ;EACF,CAAC;EACH,MAAMC,WAAW,GAAInB,EAAE,IAAG;IACxBO,OAAO,CAACC,GAAG,CAACR,EAAE,CAAC;EACjB,CAAC;EACC,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MAAA,UAAKH,KAAK,CAACuB;IAAK;MAAA;MAAA;MAAA;IAAA,QAAM,eACtB;MAAK,SAAS,EAAC,SAAS;MAAA,UACvBtB,MAAM,CAACuB,GAAG,CAAEC,GAAG,iBAEd;QAAK,OAAO,EAAE,MAAIH,WAAW,CAACG,GAAG,CAACtB,EAAE,CAAE;QAAC,SAAS,EAAEH,KAAK,CAAC0B,OAAO,GAAG,aAAa,GAAE,QAAS;QAAC,GAAG,EAAC,QAAQ;QAAC,GAAG,EAAG,GAAE7B,QAAQ,GAAE4B,GAAG,CAACE,aAAc;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG;IAClJ;MAAA;MAAA;MAAA;IAAA,QACK,eACN,QAAC,OAAO;MAAC,IAAI,EAAEV,IAAK;MAAC,OAAO,EAAC;IAAa;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QACxC;AAEV;AAAC,GAlCQlB,OAAO;AAAA,KAAPA,OAAO;AAoChB,eAAeA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}